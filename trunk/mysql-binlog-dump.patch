--- mysql-binlog-dump.c	2009-07-01 03:39:51.000000000 -0700
+++ fv-binlog-dump.c	2009-10-25 19:58:31.000000000 -0700
@@ -1,5 +1,6 @@
 /* $%BEGINLICENSE%$
  Copyright (C) 2008 MySQL AB, 2008 Sun Microsystems, Inc
+ Additional Copyright (C) 2009 Justin Swanhart, Flexviews
 
  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
@@ -14,7 +15,13 @@
  along with this program; if not, write to the Free Software
  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 
- $%ENDLICENSE%$ */
+ $%ENDLICENSE%$
+
+ Modified to record changelog entries and other ancilliary data from a RBR log.
+
+ Inital 1.0 version October 25, 2009 Sun 12:07AM 
+
+ */
 #include <stdlib.h>
 #include <unistd.h>
 #include <fcntl.h>
@@ -421,9 +428,10 @@
 	}
 	g_string_append(out, "\n)");
 
+#if 0
 	g_print("-- %s:\n%s\n\n",
 			G_STRLOC, out->str);
-
+#endif
 	g_string_free(out, TRUE);
 }
 
@@ -431,7 +439,9 @@
  * decode a binlog event
  */
 int network_mysqld_binlog_event_print(network_mysqld_binlog *binlog, 
-		network_mysqld_binlog_event *event) {
+		network_mysqld_binlog_event *event,
+                const char *logfile,
+                const long binlog_pos) {
 	guint i;
 	network_mysqld_table *tbl;
 	int err = 0;
@@ -458,12 +468,17 @@
 				event->event.query_event.query ? event->event.query_event.query : "(null)"
 			 );
 #else
-		g_print("-- %s: db = %s\n%s\n\n",
+	#if 1
+		if(strstr(event->event.query_event.query, "BEGIN") != NULL) {
+		g_print("-- %s: db = %s\nBEGIN;\nSET SQL_LOG_BIN=0;\n%s\n%s\n\n",
 				G_STRLOC,
 				event->event.query_event.db_name ? event->event.query_event.db_name : "(null)",
-				event->event.query_event.query ? event->event.query_event.query : "(null)"
+				event->event.query_event.query ? "INSERT INTO flexviews.mview_uow values (NULL,NULL);" : "",
+				event->event.query_event.query ? "SET @fv_uow_id = LAST_INSERT_ID();" : ""
 			 );
+		}
 
+	#endif
 #endif
 		break;
 	case STOP_EVENT:
@@ -482,6 +497,12 @@
 	case INTVAR_EVENT: /* 5 */
 	 	break;
 	case XID_EVENT: /* 16 */
+		g_print("-- %s\nSET SQL_LOG_BIN=1;\nREPLACE INTO flexviews.binlog_consumer_status VALUES('%s',%d);\nCOMMIT;\n",
+				G_STRLOC,
+				logfile,
+				binlog_pos 
+			 );
+		
 		break;
 	case ROTATE_EVENT: /* 4 */
 		break;
@@ -511,6 +532,7 @@
 #endif
 
 		do {
+			
 			GPtrArray *pre_fields, *post_fields = NULL;
 			GString *out = g_string_new(NULL);
 			gchar *post_bits = NULL, *pre_bits;
@@ -541,24 +563,34 @@
 			}
 
 			/* call lua */
-
+			#if 0
+			if ((tbl->db_name->str == "mon_db" || tbl->db_name->str == "flexviews") && 
+			    (tbl->table_name->str == "metrics" || tbl->table_name->str == "mview_signal"))
+			#else 
+			if (1)
+			#endif
+			{
+ 	
 			switch (event->event_type) {
 			case UPDATE_ROWS_EVENT:
-				g_string_append_printf(out, "UPDATE %s.%s\n   SET ",
+				// Insert into the _mvlog table instead of into the base table
+                                // The first value, 1, is a constant which represents an INSERT
+                                // The second value is the current Flexviews UOW_ID.  There is one UOW_ID per transaction.
+				g_string_append_printf(out, "INSERT INTO %s.%s_mvlog VALUES\n  (-1,@fv_uow_id,",
 						tbl->db_name->str,
 						tbl->table_name->str);
 
-				for (i = 0; i < post_fields->len; i++) {
-					network_mysqld_proto_field *field = post_fields->pdata[i];
+				for (i = 0; i < pre_fields->len; i++) {
+					network_mysqld_proto_field *field = pre_fields->pdata[i];
 					if (i > 0) {
 						g_string_append_printf(out, ", ");
 					}
 					if (field->is_null) {
-						g_string_append_printf(out, "field_%d = NULL", i);
+						g_string_append(out, "NULL");
 					} else {
 						switch((guchar)field->fielddef->type) {
-						case MYSQL_TYPE_DATE:
 						case MYSQL_TYPE_TIMESTAMP:
+						case MYSQL_TYPE_DATE:
 						case MYSQL_TYPE_DATETIME:
 
 						case MYSQL_TYPE_TINY:
@@ -566,15 +598,15 @@
 						case MYSQL_TYPE_INT24:
 						case MYSQL_TYPE_LONG:
 						case MYSQL_TYPE_ENUM:
-							g_string_append_printf(out, "field_%d = %"G_GUINT64_FORMAT, i, field->data.i);
+							g_string_append_printf(out, "%"G_GUINT64_FORMAT, field->data.i);
 							break;
 						case MYSQL_TYPE_VARCHAR:
 						case MYSQL_TYPE_VAR_STRING:
 						case MYSQL_TYPE_STRING:
-							g_string_append_printf(out, "field_%d = '%s'", i, field->data.s ? field->data.s : "");
+							g_string_append_printf(out, "'%s'", field->data.s ? field->data.s : "");
 							break;
 						case MYSQL_TYPE_BLOB:
-							g_string_append_printf(out, "field_%d = '...(blob)'", i);
+							g_string_append_printf(out, "'...(blob)'");
 							break;
 						case MYSQL_TYPE_NEWDECIMAL:
 							g_string_append_printf(out, "'...(decimal)'");
@@ -588,14 +620,19 @@
 					}
 				}
 
-				g_string_append_printf(out, "\n WHERE ");
-				for (i = 0; i < pre_fields->len; i++) {
-					network_mysqld_proto_field *field = pre_fields->pdata[i];
+				g_string_append_printf(out, ");\n");
+
+				g_string_append_printf(out, "INSERT INTO %s.%s_mvlog VALUES(1,@fv_uow_id,",
+						tbl->db_name->str,
+						tbl->table_name->str);
+
+				for (i = 0; i < post_fields->len; i++) {
+					network_mysqld_proto_field *field = post_fields->pdata[i];
 					if (i > 0) {
-						g_string_append_printf(out, " AND ");
+						g_string_append_printf(out, ", ");
 					}
 					if (field->is_null) {
-						g_string_append_printf(out, "field_%d IS NULL", i);
+						g_string_append(out, "NULL");
 					} else {
 						switch((guchar)field->fielddef->type) {
 						case MYSQL_TYPE_TIMESTAMP:
@@ -607,15 +644,15 @@
 						case MYSQL_TYPE_INT24:
 						case MYSQL_TYPE_LONG:
 						case MYSQL_TYPE_ENUM:
-							g_string_append_printf(out, "field_%d = %"G_GUINT64_FORMAT, i, field->data.i);
+							g_string_append_printf(out, "%"G_GUINT64_FORMAT, field->data.i);
 							break;
 						case MYSQL_TYPE_VARCHAR:
 						case MYSQL_TYPE_VAR_STRING:
 						case MYSQL_TYPE_STRING:
-							g_string_append_printf(out, "field_%d = '%s'", i, field->data.s ? field->data.s : "");
+							g_string_append_printf(out, "'%s'", field->data.s ? field->data.s : "");
 							break;
 						case MYSQL_TYPE_BLOB:
-							g_string_append_printf(out, "field_%d = '...(blob)'", i);
+							g_string_append_printf(out, "'...(blob)'");
 							break;
 						case MYSQL_TYPE_NEWDECIMAL:
 							g_string_append_printf(out, "'...(decimal)'");
@@ -628,9 +665,14 @@
 						}
 					}
 				}
+				g_string_append_printf(out,");");
+
 				break;
 			case WRITE_ROWS_EVENT:
-				g_string_append_printf(out, "INSERT INTO %s.%s VALUES\n  (",
+				// Insert into the _mvlog table instead of into the base table
+                                // The first value, 1, is a constant which represents an INSERT
+                                // The second value is the current Flexviews UOW_ID.  There is one UOW_ID per transaction.
+				g_string_append_printf(out, "INSERT INTO %s.%s_mvlog VALUES\n  (1,@fv_uow_id,",
 						tbl->db_name->str,
 						tbl->table_name->str);
 
@@ -674,20 +716,20 @@
 					}
 				}
 
-				g_string_append_printf(out, ")");
+				g_string_append_printf(out, ");");
 				break;
 			case DELETE_ROWS_EVENT:
-				g_string_append_printf(out, "DELETE FROM %s.%s\n WHERE ",
+				g_string_append_printf(out, "INSERT INTO %s.%s_mvlog VALUES(-1,@fv_uow_id,",
 						tbl->db_name->str,
 						tbl->table_name->str);
 
 				for (i = 0; i < pre_fields->len; i++) {
 					network_mysqld_proto_field *field = pre_fields->pdata[i];
 					if (i > 0) {
-						g_string_append_printf(out, " AND ");
+						g_string_append_printf(out, ", ");
 					}
 					if (field->is_null) {
-						g_string_append_printf(out, "field_%d IS NULL", i);
+						g_string_append(out, "NULL");
 					} else {
 						switch((guchar)field->fielddef->type) {
 						case MYSQL_TYPE_TIMESTAMP:
@@ -699,15 +741,15 @@
 						case MYSQL_TYPE_INT24:
 						case MYSQL_TYPE_LONG:
 						case MYSQL_TYPE_ENUM:
-							g_string_append_printf(out, "field_%d = %"G_GUINT64_FORMAT, i, field->data.i);
+							g_string_append_printf(out, "%"G_GUINT64_FORMAT, field->data.i);
 							break;
 						case MYSQL_TYPE_VARCHAR:
 						case MYSQL_TYPE_VAR_STRING:
 						case MYSQL_TYPE_STRING:
-							g_string_append_printf(out, "field_%d = '%s'", i, field->data.s ? field->data.s : "");
+							g_string_append_printf(out, "'%s'", field->data.s ? field->data.s : "");
 							break;
 						case MYSQL_TYPE_BLOB:
-							g_string_append_printf(out, "field_%d = '...(blob)'", i);
+							g_string_append_printf(out, "'...(blob)'");
 							break;
 						case MYSQL_TYPE_NEWDECIMAL:
 							g_string_append_printf(out, "'...(decimal)'");
@@ -720,12 +762,15 @@
 						}
 					}
 				}
+				g_string_append_printf(out,");");
 				break;
 
 			default:
 				break;
 			}
-#if 0
+
+			}
+#if 1 
 			g_print("-- %s:\n%s\n\n", G_STRLOC, out->str);
 #endif
 
@@ -917,7 +962,7 @@
 		
 		if (network_mysqld_proto_get_binlog_event(packet, binlog, event)) {
 			g_debug_hexdump(G_STRLOC, packet->data->str + 19, packet->data->len - 19);
-		} else if (network_mysqld_binlog_event_print(binlog, event)) {
+		} else if (network_mysqld_binlog_event_print(binlog, event, filename, event->log_pos)) {
 			g_debug_hexdump(G_STRLOC, packet->data->str + 19, packet->data->len - 19);
 			/* ignore it */
 		}
