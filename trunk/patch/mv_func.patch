--- mysql-5.0.51a/sql/lex.h	2008-01-11 09:43:38.000000000 -0500
+++ mysql-5.0.51a-patched/sql/lex.h	2008-02-23 19:29:52.000000000 -0500
@@ -785,5 +785,7 @@
   { "WITHIN",		F_SYM(FUNC_ARG2),0,CREATE_FUNC_GEOM(create_func_within)},
   { "X",		F_SYM(FUNC_ARG1),0,CREATE_FUNC_GEOM(create_func_x)},
   { "Y",		F_SYM(FUNC_ARG1),0,CREATE_FUNC_GEOM(create_func_y)},
-  { "YEARWEEK",		SYM(YEARWEEK)}
+  { "YEARWEEK",		SYM(YEARWEEK)},
+  { "GET_COMMITS",	F_SYM(FUNC_ARG0),0,CREATE_FUNC(create_func_getcommits)},
+  { "GET_ROLLBACKS",	F_SYM(FUNC_ARG0),0,CREATE_FUNC(create_func_getrollbacks)},
 };
--- mysql-5.0.51a/sql/item_func.h	2008-01-11 09:43:28.000000000 -0500
+++ mysql-5.0.51a-patched/sql/item_func.h	2008-02-23 19:33:38.000000000 -0500
@@ -297,6 +297,29 @@
   longlong val_int() { DBUG_ASSERT(fixed == 1); return value; }
 };
 
+class Item_func_getcommits:public Item_int_func
+{
+  longlong value;
+
+public:
+  Item_func_getcommits() {}
+  const char *func_name() const { return "get_commits"; }
+  void fix_length_and_dec();
+  bool fix_fields(THD *thd, Item **ref);
+  longlong val_int() { DBUG_ASSERT(fixed == 1); return value; }
+};
+
+class Item_func_getrollbacks:public Item_int_func
+{
+  longlong value;
+
+public:
+  Item_func_getrollbacks() {}
+  const char *func_name() const { return "get_rollbacks"; }
+  void fix_length_and_dec();
+  bool fix_fields(THD *thd, Item **ref);
+  longlong val_int() { DBUG_ASSERT(fixed == 1); return value; }
+};
 
 class Item_func_signed :public Item_int_func
 {
--- mysql-5.0.51a/sql/item_func.cc	2008-01-11 09:43:40.000000000 -0500
+++ mysql-5.0.51a-patched/sql/item_func.cc	2008-02-23 19:35:48.000000000 -0500
@@ -654,6 +654,39 @@
   return FALSE;
 }
 
+void Item_func_getcommits::fix_length_and_dec()
+{
+  Item_int_func::fix_length_and_dec();
+  max_length= 10;
+}
+
+
+bool Item_func_getcommits::fix_fields(THD *thd, Item **ref)
+{
+  if (Item_int_func::fix_fields(thd, ref))
+    return TRUE;
+  thd->thread_specific_used= TRUE;
+
+  value= thd->status_var.com_stat[SQLCOM_COMMIT];
+  return FALSE;
+}
+
+void Item_func_getrollbacks::fix_length_and_dec()
+{
+  Item_int_func::fix_length_and_dec();
+  max_length= 10;
+}
+
+
+bool Item_func_getrollbacks::fix_fields(THD *thd, Item **ref)
+{
+  if (Item_int_func::fix_fields(thd, ref))
+    return TRUE;
+  thd->thread_specific_used= TRUE;
+
+  value= thd->status_var.com_stat[SQLCOM_ROLLBACK];
+  return FALSE;
+}
 
 /*
   Check arguments here to determine result's type for a numeric
--- mysql-5.0.51a/sql/item_create.cc	2008-01-11 09:43:19.000000000 -0500
+++ mysql-5.0.51a-patched/sql/item_create.cc	2008-02-23 19:31:08.000000000 -0500
@@ -75,6 +75,20 @@
   return new Item_func_connection_id();
 }
 
+Item *create_func_getcommits(void)
+{
+  THD *thd= current_thd;
+  thd->lex->safe_to_cache_query= 0;
+  return new Item_func_getcommits();
+}
+
+Item *create_func_getrollbacks(void)
+{
+  THD *thd= current_thd;
+  thd->lex->safe_to_cache_query= 0;
+  return new Item_func_getrollbacks();
+}
+
 Item *create_func_conv(Item* a, Item *b, Item *c)
 {
   return new Item_func_conv(a,b,c);
--- mysql-5.0.51a/sql/item_create.h	2008-01-11 09:43:13.000000000 -0500
+++ mysql-5.0.51a-patched/sql/item_create.h	2008-02-23 19:34:16.000000000 -0500
@@ -31,6 +31,8 @@
                        const char *len, const char *dec,
                        CHARSET_INFO *cs);
 Item *create_func_connection_id(void);
+Item *create_func_getcommits(void);
+Item *create_func_getrollbacks(void);
 Item *create_func_conv(Item* a, Item *b, Item *c);
 Item *create_func_cos(Item* a);
 Item *create_func_cot(Item* a);
